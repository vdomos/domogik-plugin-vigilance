#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Gruik coded by GuiguiAbloc
# http://blog.guiguiabloc.fr
# http://api.domogeek.fr
#

import urllib2
from urllib2 import Request, urlopen, URLError, HTTPError
import traceback
from xml.dom import minidom

class vigilance:
  def getvigilance(self, deprequest):
      
    url = 'http://vigilance.meteofrance.com/data/NXFR34_LFPW_.xml'
    risklong = ["", "vent", "pluie-inondation", "orages", "inondations", "neige-verglas", "canicule", "grand-froid"]
    color = ["gris", "vert", "jaune", "orange", "rouge"]    # gris pour les départements sans cours d'eau à risques 
    
    try:
        xmldata = urllib2.urlopen(url)
        dom = minidom.parse(xmldata)
    except HTTPError, err:
        return "error", u"API GET '%s', HTTPError code: %d" % (url, err.code), ""
    except URLError, err:
        return "error", u"API GET '%s', URLError reason: %s" % (url, err.reason), ""
    except:
        return "error", u"API GET '%s', Unknown error: '%s'" % url, (traceback.format_exc()), ""
    else:
        for all in dom.getElementsByTagName('datavigilance'):
            depart = all.attributes['dep'].value
            print "depart = '%s'" % depart
            if depart == deprequest:
                colorresult = all.attributes['couleur'].value
                riskresult = "Ras"
                for risk in all.getElementsByTagName('risque'):
                    riskresult = risklong[int(risk.attributes['valeur'].value)]
                    print "  riskresult = '%s'" % riskresult
                for flood in all.getElementsByTagName('crue'):
                    floodresult = color[int(flood.attributes['valeur'].value)]
                    print "  floodresult = '%s'" % floodresult
                color = color[int(colorresult)]
                return color, riskresult, floodresult

